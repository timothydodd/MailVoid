name: Build and Deploy

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  NODE_VERSION: '18.x'

jobs:
  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore src/MailVoidApi/MailVoidApi.csproj

    - name: Build
      run: dotnet build src/MailVoidApi/MailVoidApi.csproj --configuration Release --no-restore

    - name: Test
      run: dotnet test src/MailVoidApi/MailVoidApi.csproj --no-restore --verbosity normal
      continue-on-error: true

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: src/MailVoidWeb/package-lock.json

    - name: Install dependencies
      working-directory: src/MailVoidWeb
      run: npm ci

    - name: Lint
      working-directory: src/MailVoidWeb
      run: npm run lint
      continue-on-error: true

    - name: Build
      working-directory: src/MailVoidWeb
      run: npm run build

    - name: Test
      working-directory: src/MailVoidWeb
      run: npm test -- --watch=false --browsers=ChromeHeadless
      continue-on-error: true

  docker-build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/mailvoid
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./src/
        file: ./src/MailVoidApi/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64